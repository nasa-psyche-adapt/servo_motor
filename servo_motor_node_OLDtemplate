#!/usr/bin/env python

# NOTE ON PERMISSIONS:
# Have to type the below line first for permission change to run
# sudo chmod a+rw /dev/i2c-*

# CREDITS:
#


# IMPORT:
import time
import board
import GPIO                # chage to GPIO

import rospy
from geometry_msgs.msg import Point, PointStamped, Pose, Quaternion, Twist, Vector3     # Specific to ROS nodes. Changes data type.

def SetAngle(angle):
    duty = angle / 18 + 2
    GPIO.output(03, True)
    pwn.ChangeDutyCycle(duty)
    sleep(1)
    GPIO.output(03,False)
    pwm.ChangeDutyCycle(0)

def talker():

    # MAIN PART OF PUBLISHING:
    pub = rospy.Publisher('example/pancake', *package*, queue_size=50)    # Change: pub = rospy.Publisher('name_of_component', package_used, queue_size=50)
    rospy.init_node('pancake_motor_node', anonymous=True)                 # Change: rospy.init_node('name_of_node', anonymous=True)

    # TIME KEEPING:
    start_time = rospy.Time.now()
    current_time = rospy.Time.now()
    last_time = rospy.Time.now()
    rate = rospy.Rate(10)  # 10hz while not rospy.is_shutdown(): odom = Odometry()

    # might not be needed. Need to follow-up
    q = Quaternion()        # need this one?
    # q.x = 0
    # q.y = 0
    # q.z = 0
    # q.w = 0

    # FUNCTIONS OF SPECIFIC COMPONENT:
    while not rospy.is_shutdown():

        i = Imu()                           # Change: for specific component
        i.header.stamp = rospy.Time.now()
        i.header.frame_id = 'base_link'     # All nodes need to have the same name, maybe change to main_frame_id"

        print(state)

        # Can add more print statements here
        # print("    Acceleration:	", (i.linear_acceleration), "m/s^2")
        # ADD MOVEMENT STATEMENTS HERE
        # STEP ANGLE IS 1.8degrees

        # simple_drive package gives joystick ctrl of driving, can send vel commands, can pan a servo camera
        # http://wiki.ros.org/simple_drive#simple_drive
        # code: https://github.com/danielsnider/simple_drive/blob/master/drive_firmware/src/main.cpp

        time.sleep(0.5)  # sleep for 0.5 seconds

        # PUBLISH RESULTS:
        pub.publish(i)

# NAME THIS SECTION:
if __name__ == '__main__':
    try:
        talker()
    except rospy.ROSInterruptException:
        pass
